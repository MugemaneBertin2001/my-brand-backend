swagger: "2.0"
info:
  title: My Brand Backend
  description: ATL my brand backend
  version: 1.0
  contact:
    email: bertin.m2001@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0"
servers:
  - url: http://localhost:3000/api/v1
    description: This is my local Server
  - url: https://my-brand-backend-lmk2.onrender.com/api/v1
    description: This is my original URL
schemes:
  - http
  - https
tags:
  - name: User
    description: Operations related to user management
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Use 'Bearer <token>' to authenticate requests
paths:
  /api/v1/users/register:
    post:
      tags:
        - User
      summary: Register a new user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User details to register
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              fullName:
                type: string
              role:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: User registered successfully
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  fullName:
                    type: string
                  role:
                    type: string
                  email:
                    type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/users/login:
    post:
      tags:
        - User
      summary: Login with user credentials
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: userCredentials
          description: User credentials for login
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              message:
                type: string
              token:
                type: string
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/users/list:
    get:
      tags:
        - User
      summary: Get all users
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                fullName:
                  type: string
                role:
                  type: string
                email:
                  type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/users/{id}:
    put:
      tags:
        - User
      summary: Update user by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user to update
          required: true
          type: string
        - in: body
          name: userData
          description: Updated user data
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              fullName:
                type: string
              role:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: User updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  fullName:
                    type: string
                  role:
                    type: string
                  email:
                    type: string
        404:
          description: User not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []
    delete:
      tags:
        - User
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          description: ID of the user to delete
          required: true
          type: string
      responses:
        200:
          description: User deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  fullName:
                    type: string
                  role:
                    type: string
                  email:
                    type: string
        404:
          description: User not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []

  /api/v1/message:
    post:
      tags:
        - Message
      summary: Create a new message
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: message
          description: Message details to create
          required: true
          schema:
            type: object
            properties:
              fullName:
                type: string
              email:
                type: string
              messageBody:
                type: string
      responses:
        201:
          description: Message created successfully
          schema:
            type: object
            properties:
              id:
                type: string
              fullName:
                type: string
              email:
                type: string
              messageBody:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    get:
      tags:
        - Message
      summary: Get all messages
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                fullName:
                  type: string
                email:
                  type: string
                messageBody:
                  type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/message/{id}:
    delete:
      tags:
        - Message
      summary: Delete message by ID
      parameters:
        - in: path
          name: id
          description: ID of the message to delete
          required: true
          type: string
      responses:
        200:
          description: Message deleted successfully
          schema:
            type: object
            properties:
              id:
                type: string
              fullName:
                type: string
              email:
                type: string
              messageBody:
                type: string
        404:
          description: Message not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []

  /api/v1/blogs:
    post:
      tags:
        - Blog
      summary: Create a new blog
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          type: string
          required: true
          description: Title of the blog
        - name: content
          in: formData
          type: string
          required: true
          description: Content of the blog
        - name: file
          in: formData
          type: file
          required: false
          description: Image file associated with the blog
      responses:
        201:
          description: Blog created successfully
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              content:
                type: string
              imageUrl:
                type: string
        400:
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []
      
    get:
      tags:
        - Blog
      summary: Get all blogs
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/blogs/{id}:
    get:
      tags:
        - Blog
      summary: Get a blog by ID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to retrieve
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              content:
                type: string
              image:
                type: string
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    put:
      tags:
        - Blog
      summary: Update a blog by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to update
          required: true
        - in: body
          name: updateData
          description: Updated blog data
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
              image:
                type: string
      responses:
        200:
          description: Blog updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              content:
                type: string
              image:
                type: string
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []
    delete:
      tags:
        - Blog
      summary: Delete a blog by ID
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to delete
          required: true
      responses:
        204:
          description: Blog deleted successfully
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []


  /api/v1/blogs:
    post:
      tags:
        - Blog
      summary: Create a new blog
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: title
          type: string
          description: Title of the blog
          required: true
        - in: formData
          name: content
          type: string
          description: Content of the blog
          required: true
        - in: formData
          name: image
          type: file
          description: Image for the blog (optional)
      responses:
        201:
          description: Blog created successfully
          schema:
            type: object
            properties:
              message:
                type: string
              blog:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
                  image:
                    type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    get:
      tags:
        - Blog
      summary: Get all blogs
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /api/v1/blogs/{id}:
    get:
      tags:
        - Blog
      summary: Get a blog by ID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to retrieve
          required: true
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              content:
                type: string
              image:
                type: string
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    put:
      tags:
        - Blog
      summary: Update a blog by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to update
          required: true
        - in: body
          name: updateData
          description: Updated blog data
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
              image:
                type: string
      responses:
        200:
          description: Blog updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              content:
                type: string
              image:
                type: string
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      tags:
        - Blog
      summary: Delete a blog by ID
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the blog to delete
          required: true
      responses:
        204:
          description: Blog deleted successfully
        404:
          description: Blog not found
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string


  /api/v1/blogs/{blogId}/like:
    post:
      tags:
        - Like
      summary: Like a blog
      description: Adds a like to the specified blog by the authenticated user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: blogId
          description: ID of the blog to like
          required: true
          type: string
      responses:
        200:
          description: Like removed successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Like removed successfully
        201:
          description: Blog liked successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Blog liked successfully
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
      security:
        - BearerAuth: []
   
  /api/v1/blogs/{blogId}/likes:
    get:
      tags:
        - Like
      summary: Get likes by blog ID
      description: Retrieves all likes for the specified blog.
      parameters:
        - in: path
          name: blogId
          description: ID of the blog to get likes for
          required: true
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                  description: Unique identifier of the like
                blog:
                  type: string
                  description: ID of the blog that was liked
                user:
                  type: string
                  description: ID of the user who liked the blog
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string

  /api/v1/blogs/{blogId}/comment:
    post:
      tags:
        - Comment
      summary: Add a comment to a blog
      description: Adds a comment to the specified blog.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: blogId
          description: ID of the blog to add a comment to
          required: true
          type: string
        - in: body
          name: comment
          description: Comment details to add
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the commenter
              body:
                type: string
                description: Content of the comment
      responses:
        201:
          description: Comment added successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Comment added successfully
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
    get:
      tags:
        - Comment
      summary: Get comments by blog ID
      description: Retrieves all comments for the specified blog.
      parameters:
        - in: path
          name: blogId
          description: ID of the blog to get comments for
          required: true
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                example: Comments for this blog
              blogId:
                type: string
                description: ID of the blog
              comments:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Unique identifier of the comment
                    name:
                      type: string
                      description: Name of the commenter
                    body:
                      type: string
                      description: Content of the comment
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
